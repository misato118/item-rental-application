# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Owner application status for an item"""
enum ApplicationStatus {
  """When an owner application is accepted"""
  ACCEPTED

  """When an owner applied to publish an item."""
  APPLIED

  """When an owner application is declined."""
  DECLINED
}

type Company {
  createdAt: DateTime!
  description: String!
  email: String!
  employees: [Employee!]
  id: Int!
  items: [Item!]
  logoURL: String
  name: String!
  updatedAt: DateTime!
}

input CreateCompanyInput {
  description: String!
  email: String!
  logoURL: String!
  name: String!
}

input CreateEmployeeInput {
  birthDate: DateTime!

  """The name of a company this employee works for"""
  company: String!
  email: String!
  firstName: String!
  lastName: String!
}

input CreateFormInput {
  itemId: Int!
  offeringDuration: Int!
  offeringPrice: Float!
  renterId: Int!
}

input CreateItemInput {
  category: ItemCategory
  company: String!
  deposit: Int
  description: String
  fee: Float
  feeType: String
  id: Int
  imageURL: String
  maxDuration: Int
  maxDurationType: String
  name: String
}

input CreateRenterInput {
  birthDate: String!
  email: String!
  firstName: String!
  imageURL: String!
  lastName: String!
  username: String!
}

input CreateReviewInput {
  contents: String!
  itemId: Int!
  rating: Int!
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Employee {
  birthDate: DateTime!
  company: Company!
  companyId: Int!
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: Int!
  imageURL: String
  lastName: String!
  updatedAt: DateTime!
}

type Form {
  id: Int!
  offeringDuration: Int!
  offeringPrice: Float!
  renterApplication: RenterApplication!
}

type Item {
  category: ItemCategory!
  company: Company!
  companyId: Int!
  createdAt: DateTime!
  deposit: Int!
  description: String!
  fee: Float!
  feeType: String!
  id: Int!
  imageURL: String
  maxDuration: Int!
  maxDurationType: String!
  name: String!
  ownerApplication: OwnerApplication!
  renterApplications: [RenterApplication!]!
  reviews: [Review!]!
  stockStatus: StockStatus!
  updatedAt: DateTime!
}

"""The item types"""
enum ItemCategory {
  """Any furniture."""
  FURNITURE

  """Anything related to music such as instruments, scores, etc."""
  MUSIC

  """Any tools."""
  TOOL
}

type Mutation {
  createCompany(createCompanyInput: CreateCompanyInput!): Company!
  createEmployee(createEmployeeInput: CreateEmployeeInput!): Employee!
  createItem(createItemInput: CreateItemInput!): Company!
  createRenter(createRenterInput: CreateRenterInput!): Renter!
  createRenterApplication(createRenterApplicationInput: CreateFormInput!): RenterApplication!
  createReview(createReviewInput: CreateReviewInput!): Item!
  deleteItem(itemId: Int!): Item!
}

type OwnerApplication {
  createdAt: DateTime!
  id: Int!
  status: ApplicationStatus!
  updatedAt: DateTime!
}

type Query {
  company: [Company!]!
  companyInfo(companyName: String!): Company!
  employee: [Employee!]!
  itemByCompany(companyName: String!): Company!
  itemInfo(itemId: Int!): Item!
  items: [Item!]!
  renter: [Renter!]!
  renterApplication: [RenterApplication!]!
  review: [Review!]!
}

type Renter {
  birthDate: DateTime!
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: Int!
  imageURL: String
  lastName: String!
  renterApplications: [RenterApplication!]!
  updatedAt: DateTime!
  username: String!
}

type RenterApplication {
  createdAt: DateTime!
  form: Form!
  formId: Int!
  id: Int!
  item: Item!
  itemId: Int!
  renter: Renter!
  renterApplicationStatus: [RenterApplicationStatus!]!
  renterId: Int!
}

type RenterApplicationStatus {
  id: Int!
  renterApplication: RenterApplication!
  renterApplicationId: Int!
  status: RenterApplicationStatusType!
  updatedAt: DateTime!
}

"""Application status for a renter application"""
enum RenterApplicationStatusType {
  """When a renter application is accepted."""
  ACCEPTED

  """When a renter applied for an item."""
  APPLIED

  """When an item is returned to a company."""
  COMPLETED

  """When a renter application is declined."""
  DECLINED

  """When an item is delivered by a company."""
  DELIVERED

  """When an item is arrived at a renter."""
  RENTED

  """When a renter returns an item back to a company."""
  RETURNED
}

type Review {
  contents: String!
  createdAt: DateTime!
  id: Int!
  item: Item!
  itemId: Int!
  rating: Int!
  title: String!
  updatedAt: DateTime!
}

type StockStatus {
  currentStock: Int!
  id: Int!
  item: Item!
  itemId: Int!
  totalStock: Int!
}